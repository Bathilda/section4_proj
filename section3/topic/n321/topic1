# [N321] Python 활용

# Discussion

---

<aside>
💻 **`TOPIC 1`** 
아래의 함수를 pdb를 활용해서 코드의 작동 순서를 파악하고, 원하는 결과가 나올 수 있도록 수정해 주세요.

**`TOPIC 2`**
아래의 코드는 계산기의 더하기 기능을 구현한 코드입니다. 코드를 실행하면 계산기처럼 이전 값을 계속해서 더할 수 있습니다. 이 때, 계산기가 3개, 5개, 10개가 필요하고 빼기, 곱하기, 나누기가 필요한 상황이 온다면 어떤 방법을 써서 해결해야 하는지 조원들과 논의해보세요.
****

</aside>

```python
# Topic 1 코드
# 수정하지 마세요!

def topicOne(num):
		'''
		1부터 입력받은 인수까지 홀, 짝 두 개의 리스트에 담아 반환하는 함수입니다.
		return 값: hol_list, zzak_list
		'''
    hol_list, zzak_list = [], []
    for idx in range(1, num+1):
        if idx % 2 != 0:
            hol_list.append(idx)
            print(f"{idx}은 홀수 입니다.")
        elif idx % 2 == 0:
            zzak_list.append(idx)
            return f"{idx}은 짝수 입니다."
    return hol_list, zzak_list

topicOne(10)
```

```python
# Topic 2 코드
# 수정하지 마세요!

def add_num(insert_num , plus_num):
    insert_num += plus_num
    return insert_num

default_number = 0  # 계산하기 전의 값으므로 0입니다.

print(add_num(default_number, 3))  # 첫 번째 계산
add_number = add_num(default_number, 3)  # 첫 번째 계산이 끝난 후의 값을 저장.
print(add_num(add_number, 4))  # 두 번째 계산
```

[논의 Log](https://www.notion.so/9b6c6fe59a724f9abf13ca685e05ac47)